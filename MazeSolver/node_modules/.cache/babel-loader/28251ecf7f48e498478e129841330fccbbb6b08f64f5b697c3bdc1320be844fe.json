{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\PathFinding Visualiser\\\\MazeSolver\\\\src\\\\components\\\\Node\\\\Node.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Node.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.prevElAltered = null;\n    this.state = {};\n  }\n  render() {\n    const {\n      row,\n      col,\n      isStart,\n      isFinish,\n      isWall,\n      isVisited,\n      isShortest,\n      onMouseEnter,\n      onMouseDown,\n      onMouseUp,\n      width,\n      height,\n      numRows,\n      numColumns\n    } = this.props;\n    const extraClass = isStart ? \"node node-start\" : isFinish ? \"node node-finish\" : isWall ? \"node-wall\" : isShortest ? \"node node-shortest-path\" : isVisited ? \"node node-visited\" : \"node\";\n    let cellWidth = Math.floor((width - 15) / numColumns);\n    let cellHeight;\n    if (width > 1500) cellHeight = Math.floor((height - 70) / numRows);else if (width > 1000) cellHeight = Math.floor((height - 70) / numRows);else if (width > 500) cellHeight = Math.floor((height - 60) / numRows);else if (width > 0) cellHeight = Math.floor((height - 50) / numRows);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `node-${row}-${col}`,\n      className: `${extraClass}`,\n      style: {\n        \"--width\": `${cellWidth}px`,\n        \"--height\": `${cellHeight}px`\n      },\n      onPointerDown: () => onMouseDown(row, col),\n      onPointerUp: () => onMouseUp(),\n      onMouseEnter: () => onMouseEnter(row, col),\n      onTouchMove: event => this.onTouchEnter(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n  // Used for adding touch event accessibility.\n\n  onTouchEnter(e) {\n    // Get co-ordinates of the touch event.\n    const touch = e.touches[0] || e.changedTouches[0];\n    const x = touch.pageX;\n    const y = touch.pageY;\n\n    // Get element that the touch event is 'hovering' over.\n    const currEl = document.elementFromPoint(x, y);\n\n    // If the element is a node, then we run the logic to switch between wall and space.\n    if (currEl.className === \"node\" || currEl.className === \"node-wall\") {\n      // Guard Condition: Make sure to not repeatedly alter the same node.\n      if (this.prevElAltered != null && this.prevElAltered === currEl) return;\n      this.prevElAltered = currEl;\n      const idSplit = currEl.id.split(\"-\");\n      const row = idSplit[1];\n      const col = idSplit[2];\n      this.props.onMouseEnter(row, col);\n    }\n  }\n}\nexport default Node;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Node","constructor","props","prevElAltered","state","render","row","col","isStart","isFinish","isWall","isVisited","isShortest","onMouseEnter","onMouseDown","onMouseUp","width","height","numRows","numColumns","extraClass","cellWidth","Math","floor","cellHeight","id","className","style","onPointerDown","onPointerUp","onTouchMove","event","onTouchEnter","fileName","_jsxFileName","lineNumber","columnNumber","e","touch","touches","changedTouches","x","pageX","y","pageY","currEl","document","elementFromPoint","idSplit","split"],"sources":["C:/Users/HP/Desktop/PathFinding Visualiser/MazeSolver/src/components/Node/Node.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Node.css\";\r\n\r\nclass Node extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n\r\n            row,\r\n            col,\r\n\r\n            isStart,\r\n            isFinish,\r\n            isWall,\r\n            isVisited,\r\n            isShortest,\r\n\r\n            onMouseEnter,\r\n            onMouseDown,\r\n            onMouseUp,\r\n\r\n            width,\r\n            height,\r\n            numRows,\r\n            numColumns,\r\n\r\n        } = this.props;\r\n\r\n        const extraClass = isStart\r\n            ? \"node node-start\" : isFinish\r\n            ? \"node node-finish\" : isWall\r\n            ? \"node-wall\" : isShortest\r\n            ? \"node node-shortest-path\" : isVisited\r\n            ? \"node node-visited\" : \"node\";\r\n\r\n        let cellWidth = Math.floor((width - 15) / numColumns);\r\n\r\n        let cellHeight;\r\n        if (width > 1500) cellHeight = Math.floor((height - 70) / numRows);\r\n        else if (width > 1000) cellHeight = Math.floor((height - 70) / numRows);\r\n        else if (width > 500) cellHeight = Math.floor((height - 60) / numRows);\r\n        else if (width > 0) cellHeight = Math.floor((height - 50) / numRows);\r\n\r\n        return (\r\n\r\n            <div\r\n                id={`node-${row}-${col}`} className={`${extraClass}`}\r\n                style={{ \"--width\": `${cellWidth}px`, \"--height\": `${cellHeight}px` }}\r\n\r\n                onPointerDown={() => onMouseDown(row, col)}\r\n                onPointerUp={() => onMouseUp()}\r\n\r\n                onMouseEnter={() => onMouseEnter(row, col)}\r\n                onTouchMove={(event) => this.onTouchEnter(event)}\r\n            >\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    prevElAltered = null; // Used for adding touch event accessibility.\r\n\r\n    onTouchEnter(e) {\r\n\r\n        // Get co-ordinates of the touch event.\r\n        const touch = e.touches[0] || e.changedTouches[0];\r\n        const x = touch.pageX;\r\n        const y = touch.pageY;\r\n\r\n        // Get element that the touch event is 'hovering' over.\r\n        const currEl = document.elementFromPoint(x, y);\r\n\r\n        // If the element is a node, then we run the logic to switch between wall and space.\r\n        if (currEl.className === \"node\" || currEl.className === \"node-wall\") {\r\n\r\n            // Guard Condition: Make sure to not repeatedly alter the same node.\r\n            if (this.prevElAltered != null && this.prevElAltered === currEl) return;\r\n\r\n            this.prevElAltered = currEl;\r\n\r\n            const idSplit = currEl.id.split(\"-\");\r\n            const row = idSplit[1];\r\n            const col = idSplit[2];\r\n\r\n            this.props.onMouseEnter(row, col);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Node;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}